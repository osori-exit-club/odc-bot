name: Build Executable

on:
  push:
    branches:
      - main

env:
  DISCORD_TOKEN: ${{ secrets.DISCORD_TOKEN }}
  CSV_URL: ${{ secrets.CSV_URL }}

jobs:
  build:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest]
        python-version: [3.12]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies (Linux/macOS)
        if: runner.os != 'windows-latest'
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        shell: bash

      - name: Install dependencies (Windows)
        if: runner.os == 'windows-latest'
        run: |
          python -m pip install --upgrade pip
          if (Test-Path -Path requirements.txt) {pip install -r requirements.txt}
        shell: powershell


      # GitHub Secrets 주입

      - name: Install PyInstaller
        run: pip install pyinstaller

      - name: Build executable
        run: pyinstaller --onefile -n odc_bot --add-data "src/ControlPanel.py:src" --add-data "src/bot.py:src"  --add-data ".env:."  --hidden-import 'discord' --hidden-import 'pandas' src/bot-app.py
        shell: bash

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: executable-${{ matrix.os }}-${{ matrix.python-version }}
          path: dist/*